
import streamlit as st
from openai import OpenAI

client = OpenAI(api_key=st.secrets["openai"]["api_key"])

st.set_page_config(page_title="Chat Personalizado", layout="centered")
st.title("ü§ñ Chat Amig√°vel e Respeitoso")
st.markdown("Preencha suas informa√ß√µes para iniciar a conversa com a IA:")

# Formul√°rio
with st.form(key="formulario"):
    nome = st.text_input("1. Qual o seu nome completo?")
    idade = st.text_input("2. Qual a sua idade?")
    local = st.text_input("3. De onde voc√™ √©? (Cidade, estado ou regi√£o)")
    escolaridade = st.selectbox(
        "4. Qual seu n√≠vel de escolaridade?",
        ["Ensino fundamental", "Ensino m√©dio", "Faculdade", "Mestrado", "Doutorado", "P√≥s-doutorado"]
    )
    relacao_ia = st.selectbox(
        "5. Qual sua rela√ß√£o com as Intelig√™ncias Artificiais?",
        ["Boa", "N√£o sei muito", "Gosto, mas n√£o sei usar", "Tenho receio", "Nunca usei", "Uso com frequ√™ncia"]
    )
    opiniao_ia = st.text_area("6. O que voc√™ pensa sobre as Intelig√™ncias Artificiais?")
    aplicacao_ia = st.text_area("7. Como voc√™ aplicaria o uso das Intelig√™ncias Artificiais no seu dia a dia ou trabalho?")
    enviar = st.form_submit_button("üîÅ Enviar para IA")

# Identifica√ß√£o de regi√£o
def identificar_regiao(local):
    local = local.lower()
    if any(p in local for p in ["cear√°", "bahia", "pernambuco", "nordeste", "fortaleza", "recife", "salvador"]):
        return "Nordeste", ["arretado", "migu√©", "avexado", "visse", "oxente"]
    elif any(p in local for p in ["rio grande do sul", "santa catarina", "paran√°", "sul", "porto alegre", "curitiba"]):
        return "Sul", ["bah", "tri", "tch√™", "lagartear"]
    elif any(p in local for p in ["rio de janeiro", "s√£o paulo", "esp√≠rito santo", "minas", "sudeste", "bh", "campinas"]):
        return "Sudeste", ["rol√™", "padoca", "suave", "zueira", "daora"]
    elif any(p in local for p in ["goi√°s", "mato grosso", "bras√≠lia", "centro-oeste"]):
        return "Centro-Oeste", ["uai", "s√¥", "trem", "berer√©"]
    elif any(p in local for p in ["amazonas", "par√°", "roraima", "norte", "bel√©m", "manaus"]):
        return "Norte", ["√©gua", "moscou", "gaiato", "de rocha"]
    else:
        return "Indefinida", []

# Gera√ß√£o do prompt
def gerar_prompt(nome, idade, escolaridade, regiao, girias, opiniao, aplicacao, relacao):
    return f"""
Haja como uma IA amig√°vel e respeitosa, como se estivesse falando com um amigo.

A pessoa com quem voc√™ vai conversar:
- Se chama {nome}
- Tem {idade} anos
- √â da regi√£o {regiao}
- Tem o n√≠vel de escolaridade: {escolaridade}
- Descreveu sua rela√ß√£o com IA como: {relacao}
- Disse que pensa o seguinte sobre IA: "{opiniao}"
- Disse que aplicaria IA assim: "{aplicacao}"
- Usa g√≠rias como: {', '.join(girias) if girias else 'nenhuma g√≠ria espec√≠fica'}

Use um tom adaptado √† regi√£o da pessoa, com empatia e leveza. Nunca desrespeite cultura ou cren√ßas. Use as g√≠rias com naturalidade e mantenha um tom acolhedor.
""".strip()

# Processamento ap√≥s envio
if enviar:
    if not nome or not idade or not local or not opiniao_ia or not aplicacao_ia:
        st.warning("‚ö†Ô∏è Por favor, preencha todos os campos obrigat√≥rios.")
    else:
        regiao, girias = identificar_regiao(local)
        prompt = gerar_prompt(nome, idade, escolaridade, regiao, girias, opiniao_ia, aplicacao_ia, relacao_ia)

        with st.spinner("üí¨ Enviando para o ChatGPT..."):
            try:
                resposta = client.chat.completions.create(
                    model="gpt-4",
                    messages=[
                        {"role": "system", "content": prompt},
                        {"role": "user", "content": "Oi! Pode se apresentar :)"}
                    ]
                )
                conteudo = resposta.choices[0].message.content
                st.success("‚úÖ Resposta recebida!")
                st.markdown("**Resposta da IA:**")
                st.write(conteudo)
            except Exception as e:
                st.error("‚ùå Erro ao conversar com a IA.")
                st.code(str(e))
